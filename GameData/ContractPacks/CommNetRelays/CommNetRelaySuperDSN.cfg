// Copyright 2015-2017 Kerbas_ad_astra
//
// This file is part of CommNet Relays.
//
// CommNet Relays is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// CommNet Relays is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with CommNet Relays.  If not, see <http://www.gnu.org/licenses/>.

CONTRACT_TYPE
{
	name = CommNetRelaySuperDSN
	
	title = Place a relay satellite with lots of dishes in orbit around @/homeworld
	genericTitle = Place a relay satellite with lots of dishes in orbit around our homeworld
	
	group = CommNetRelays
	
	sortKey = 6
	
	description = Gus Kerman says that our ground stations just can't get any bigger.  If we're going to get longer-range communications, we'll have to put large relays in space.  Wernher von Kerman is very positive on our chances of success!
	genericDescription = Gus Kerman says that our ground stations just can't get any bigger.  If we're going to get longer-range communications, we'll have to put large relays in space.  Wernher von Kerman is very positive on our chances of success!
	
	synopsis = Place a relay satellite with lots of dishes in orbit around @/homeworld
	
	completedMessage = The relay is in position.
	
	targetBody = @/homeworld
	
	maxSimultaneous = 1
	maxCompletions = 2
	
	rewardScience = 0
	rewardReputation = 30
	rewardFunds = 20000.0
	//This contract doesn't expire, but it can be declined (can't imagine why you would, since it's free money), so we need to define failure costs.
	failureReputation = 20
	failureFunds = 50000.0
	advanceFunds = 40000.0
	
	PARAMETER
	{
		name = NewVessel
		type = NewVessel
	}
	
	DATA
	{
		type = CelestialBody
		homeworld = HomeWorld()
	}
	
	DATA
	{
		type = double
		minRelayPower = 900000000000 // 9x (!) RA-100s or equivalent
	}
	
	PARAMETER
	{
		name = ReachSpecificOrbit
		type = ReachSpecificOrbit
	}
	
	BEHAVIOUR
	{
		name = OrbitGenerator
		type = OrbitGenerator
		
		RANDOM_ORBIT
		{
			type = STATIONARY
		}
	}
	
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 0
		maxCrew = 0
	}
	
	PARAMETER
	{
		name = HasAntenna
		type = HasAntenna
		minAntennaPower = @/minRelayPower
		antennaType = RELAY
		notes = Multiple antennas may be required.  Don't forget to extend antennas that need extending!
	}
	
	REQUIREMENT
	{
		name = Orbit
		type = Orbit
		targetBody = HomeWorld().Parent()
	}
	
	REQUIREMENT
	{
		name = Facility
		type = Facility
		facility = TrackingStation
		minLevel = 2
	}
}